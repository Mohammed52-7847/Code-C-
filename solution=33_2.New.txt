#include <iostream>
using namespace std;
enum enCharType
{
	SmallLetter = 1, CapitalLetter = 2, SpecialCharacter = 3, Digit = 4
};
int RandomNumber(int From, int To)
{
	int randNum = rand() % (To - From + 1) + From;
	return randNum;
}
char GetRandomCharacter(enCharType CharType)
{
	switch (CharType)
	{
	case enCharType::SmallLetter:
	{
		return char(RandomNumber(97, 122));
		break;
	}
	case enCharType::CapitalLetter:
	{
		return char(RandomNumber(65, 90));
		break;
	}
	case enCharType::SpecialCharacter:
	{
		return char(RandomNumber(33, 47));
		break;
	}
	case enCharType::Digit:
	{
		return char(RandomNumber(48, 57));
		break;
	}
	}
}
void PrintStringArray(string arr[100], int arrlength)
{
	cout << "\nArray Elements:\n\n";
	for (int i = 0; i < arrlength; i++)
	{
		cout << "Array [" << i << "] : ";
		cout << arr[i] << "\n";
	}
	cout << "\n";
}
string GenerateWord(enCharType CharType, short Length)
{
	string Word;
	for (int i = 0; i < Length; i++)
	{
		Word = Word + GetRandomCharacter(CharType);
	}
	return Word;
}
string GenerateKey()
{
	string Key = "";
	Key = GenerateWord(enCharType::CapitalLetter, 4) + "-";
	Key = Key + GenerateWord(enCharType::CapitalLetter, 4) + "-";
	Key = Key + GenerateWord(enCharType::CapitalLetter, 4) + "-";
	Key = Key + GenerateWord(enCharType::CapitalLetter, 4);
	return Key;
}
void FillArrayWithKeys(string arr[100], int arrlength)
{
	for (int i = 0; i < arrlength; i++)
	{
		arr[i] = GenerateKey();
	}
}
int ReadPositiveNumber(string Message)
{
	int Number = 0;
	do
	{
		cout << Message << endl;
		cin >> Number;
	} while (Number <= 0);
	return Number;
}
int main()
{
	srand((unsigned)time(NULL));
	string arr[100];
	int arrlength = 0;
	arrlength = ReadPositiveNumber("How Many Keys Do You Want To Generate?\n");
	FillArrayWithKeys(arr, arrlength);
	PrintStringArray(arr, arrlength);

	return 0;
}