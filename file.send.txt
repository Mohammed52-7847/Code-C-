#pragma once
#include <iostream>
#include <string>
#include <cmath>
#include <cstdlib>
using namespace std;

namespace MyLib
{
	
	
	enum enNumberType { Odd = 1, Even = 2 };
	enum enPassFail { Pass = 1, Fail = 2 };

	string ReadName()
	{
		string Name;
		cout << "Please Enter Your Name? " << endl;
		getline(cin, Name);
		return Name;
	}

	int ReadPositiveNumber(string Message)
	{
		int Number = 0;
		do
		{
			cout << Message << endl;
			cin >> Number;
		} while (Number <= 0);
		return Number;
	}

	int Read1Mark()
	{
		int Mark;
		cout << "Please Enter Your Mark: " << endl;
		cin >> Mark;
		return Mark;
	}

	void Read2Numbers(int& Num1, int& Num2)
	{
		cout << "Please Enter Number1 ? " << endl;
		cin >> Num1;
		cout << "Please Enter Number2 ? " << endl;
		cin >> Num2;
	}

	void Read3Numbers(int& Num1, int& Num2, int& Num3)
	{
		cout << "Please Enter Your Number1:" << endl;
		cin >> Num1;
		cout << "Please Enter Your Number2:" << endl;
		cin >> Num2;
		cout << "Please Enter Your Number3:" << endl;
		cin >> Num3;
	}

	void ReadByRefNumbers(double& Num)
	{
		cout << "Please Enter Your Number1:" << endl;
		cin >> Num;
	}

	void Read3Numbers(int& A, int& B, int& C)
	{
		cout << "Please Enter Your Number A ?" << endl;
		cin >> A;
		cout << "Please Enter Your Number B ?" << endl;
		cin >> B;
		cout << "Please Enter Your Number C ?" << endl;
		cin >> C;
	}
	void Read3Marks(int& Mark1, int& Mark2, int& Mark3)
	{
		cout << "Please Enter Your Mark1:" << endl;
		cin >> Mark1;
		cout << "Please Enter Your Mark2:" << endl;
		cin >> Mark2;
		cout << "Please Enter Your Mark3:" << endl;
		cin >> Mark3;
	}
	float CalculateHalfNumber(int Num)
	{
		return (float)Num / 2;
	}

	float CalculateAverage(int Mark1, int Mark2, int Mark3)
	{
		return (float)SumOf3Marks(Mark1, Mark2, Mark3) / 3;
	}

	int SumOf3Numbers(int Num1, int Num2, int Num3)
	{
		return Num1 + Num2 + Num3;
	}

	int SumOf3Marks(int Mark1, int Mark2, int Mark3)
	{
		return Mark1 + Mark2 + Mark3;
	}

	float CalculateRectangleArea(float A, float B)
	{
		return A * B;
	}
	enPassFail CheckAverage(float Average)
	{
		if (Average >= 50)
			return enPassFail::Pass;
		else
			return enPassFail::Fail;
	}

	enPassFail CheckMark(int Mark)
	{
		if (Mark >= 50)
			return enPassFail::Pass;
		else
			return enPassFail::Fail;
	}

	enNumberType CheckNumberType(int Num)
	{
		int Result = Num % 2;
		if (Result == 0)
		{
			return enNumberType::Even;
		}
		else
		{
			return enNumberType::Odd;
		}
	}

	int MaxOf2Numbers(int Num1, int Num2)
	{
		if (Num1 > Num2)
			return Num1;
		else
			return Num2;
	}

	int MaxOf3Numbers(int A, int B, int C)
	{
		if (A > B)
			if (A > C)
				return A;
			else
				return C;
		else
			if (B > C)
				return B;
			else
				return C;
	}

	void Swap(int& A, int& B)
	{
		int Temp;
		Temp = A;
		A = B;
		B = Temp;
	}

}